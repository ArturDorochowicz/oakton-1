import{_ as s,c as a,o as n,a as l}from"./app.86ab06de.js";const A=JSON.parse('{"title":"Stateful Resources","description":"","frontmatter":{},"headers":[{"level":2,"title":"IStatefulResource Adapter","slug":"istatefulresource-adapter","link":"#istatefulresource-adapter","children":[]},{"level":2,"title":"At Startup Time","slug":"at-startup-time","link":"#at-startup-time","children":[]},{"level":2,"title":"At Testing Time","slug":"at-testing-time","link":"#at-testing-time","children":[]},{"level":2,"title":"\\"resources\\" Command","slug":"resources-command","link":"#resources-command","children":[]}],"relativePath":"guide/host/resources.md"}'),o={name:"guide/host/resources.md"},t=l(`<h1 id="stateful-resources" tabindex="-1">Stateful Resources <a class="header-anchor" href="#stateful-resources" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This feature was added in Oakton 4.5.0</p></div><p>When you&#39;re working with the codebase of an application or service, you&#39;re also likely to also be working with external infrastructure like databases or messaging brokers. Taking the example of a database, at various times during development you may want to:</p><ul><li>Set up the database schema from a brand new database installation</li><li>Completely tear down the database schema to reclaim resources</li><li>Clear all existing data out of the development database, but leave the schema in place</li><li>Check that your code can indeed connect to the database</li><li>Maybe interrogate the database for some kind of metrics that helps you test or troubleshoot your code</li></ul><p>To that end, Oakton has the <code>IStatefulResource</code> model and the new <code>resources</code> command as a way of interacting with these stateful resources like databases or messaging brokers from the command line or even at application startup time.</p><h2 id="istatefulresource-adapter" tabindex="-1">IStatefulResource Adapter <a class="header-anchor" href="#istatefulresource-adapter" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Oakton assumes that there will be anywhere from 0 to many stateful resources in your application.</p></div><p>The first element is the <code>Oakton.Resources.IStatefulResource</code> interface shown below:</p><p><a id="snippet-sample_istatefulresource"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">///     Adapter interface used by Oakton enabled applications to allow</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">///     Oakton to setup/teardown/clear the state/check on stateful external</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">///     resources of the system like databases or messaging queues</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IStatefulResource</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Categorical type name of this resource for filtering</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Identifier for this resource</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Check whether the configuration for this resource is valid. An exception</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     should be thrown if the check is invalid</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">name</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">token</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Check</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Clear any persisted state within this resource</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">name</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">token</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClearState</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Tear down the stateful resource represented by this implementation</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">name</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">token</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Teardown</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Make any necessary configuration to this stateful resource</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     to make the system function correctly</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">name</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">token</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Setup</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">///     Optionally return a report of the current state of this resource</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">name</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">token</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;&lt;/</span><span style="color:#F07178;font-style:italic;">returns</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IRenderable</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DetermineStatus</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Oakton/Resources/IStatefulResource.cs#L7-L64" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_istatefulresource" title="Start of snippet">anchor</a></sup></p><p>You can create a new adapter for your infrastructure by implementing this interface and registering a service in your .Net application&#39;s DI container. As an example, Jasper creates an <code>IStatefulResource</code> adapter to <a href="https://github.com/JasperFx/jasper/blob/36f86aa20634e8839d7d68838e2a9f5b2b023ef0/src/Jasper.RabbitMQ/Internal/RabbitMqTransport.Resource.cs" target="_blank" rel="noreferrer">its Rabbit MQ integration</a> to allow Oakton to setup, teardown, purge, and check on the expected Rabbit MQ queues for an application.</p><p>The second abstraction is the smaller <code>Oakton.Resources.IStatefulResourceSource</code> that&#39;s just a helper to &quot;find&quot; other stateful resources. The <a href="https://github.com/jasperfx/weasel" target="_blank" rel="noreferrer">Weasel library</a> exposes the <a href="https://github.com/JasperFx/weasel/blob/606099d2cbbb0505ea93b10af0118cfbeda20657/src/Weasel.CommandLine/DatabaseResources.cs" target="_blank" rel="noreferrer">DatabaseResources</a> adapter to &quot;find&quot; all the known Weasel managed databases to enable Oakton&#39;s stateful resource management.</p><p><a id="snippet-sample_istatefulresourcesource"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">///     Expose multiple stateful resources</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;/</span><span style="color:#F07178;font-style:italic;">summary</span><span style="color:#89DDFF;font-style:italic;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IStatefulResourceSource</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">IReadOnlyList</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IStatefulResource</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FindResources</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Oakton/Resources/IStatefulResourceSource.cs#L5-L15" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_istatefulresourcesource" title="Start of snippet">anchor</a></sup></p><p>To make the implementations easier, there is also an <code>Oakton.Resources.StatefulResourceBase</code> base class you can use to make stateful resource adapters that only implement some of the possible operations.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Oakton automatically adds <a href="/oakton/guide/host/environment.html">environment checks</a> for each stateful resource using its <code>Check()</code> method</p></div><h2 id="at-startup-time" tabindex="-1">At Startup Time <a class="header-anchor" href="#at-startup-time" aria-hidden="true">#</a></h2><p>Forget the command line for a second, if you have service registrations for <code>IStatefulResource</code>, you&#39;ve got some available tooling at runtime.</p><p>First, to just have your system automatically setup all resources on startup, use this option:</p><p><a id="snippet-sample_using_addresourcesetuponstartup"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> var host </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> await Host.CreateDefaultBuilder()</span></span>
<span class="line"><span style="color:#A6ACCD;">    .ConfigureServices(services </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// More service registrations like this is a real app!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        services.AddResourceSetupOnStartup()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StartAsync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Tests/Resources/ResourceHostExtensionsTests.cs#L19-L29" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using_addresourcesetuponstartup" title="Start of snippet">anchor</a></sup></p><p>The code above adds a custom <code>IHostedService</code> at the front of the line to call the <code>Setup()</code> method on each registered <code>IStatefulResource</code> in your application.</p><p>The exact same functionality can be used with slightly different syntax:</p><p><a id="snippet-sample_using_addresourcesetuponstartup2"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> var host </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> await Host.CreateDefaultBuilder()</span></span>
<span class="line"><span style="color:#A6ACCD;">    .ConfigureServices(services </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// More service registrations like this is a real app!</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span></span>
<span class="line"><span style="color:#A6ACCD;">    .UseResourceSetupOnStartup()</span></span>
<span class="line"><span style="color:#A6ACCD;">    .StartAsync()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Tests/Resources/ResourceHostExtensionsTests.cs#L34-L44" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using_addresourcesetuponstartup2" title="Start of snippet">anchor</a></sup></p><p>Or, you can only have this applied when the system is running in &quot;Development&quot; mode:</p><p><a id="snippet-sample_using_addresourcesetuponstartup3"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> var host </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> await Host.CreateDefaultBuilder()</span></span>
<span class="line"><span style="color:#A6ACCD;">    .ConfigureServices(services </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// More service registrations like this is a real app!</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span></span>
<span class="line"><span style="color:#A6ACCD;">    .UseResourceSetupOnStartupInDevelopment()</span></span>
<span class="line"><span style="color:#A6ACCD;">    .StartAsync()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Tests/Resources/ResourceHostExtensionsTests.cs#L49-L59" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using_addresourcesetuponstartup3" title="Start of snippet">anchor</a></sup></p><h2 id="at-testing-time" tabindex="-1">At Testing Time <a class="header-anchor" href="#at-testing-time" aria-hidden="true">#</a></h2><p>There are some extension methods on <code>IHost</code> in the <code>Oakton.Resources</code> namespace that you may find helpful at testing or development time:</p><p><a id="snippet-sample_programmatically_control_resources"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">usages_for_testing</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">host</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Programmatically call Setup() on all resources</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetupResources</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Maybe between integration tests, clear any</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// persisted state. For example, I&#39;ve used this to </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// purge Rabbit MQ queues between tests</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ResetResourceState</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Tear it all down!</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TeardownResources</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Tests/Resources/ResourceHostExtensionsTests.cs#L62-L78" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_programmatically_control_resources" title="Start of snippet">anchor</a></sup></p><h2 id="resources-command" tabindex="-1">&quot;resources&quot; Command <a class="header-anchor" href="#resources-command" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <em>list</em> option was added in Oakton 4.6.0.</p></div><p>Because Oakton is primarily about command line usage, you can of course interact with your stateful resources through the command line using the <code>resources</code> command that&#39;s automatically added with Oakton usage. If you&#39;ll type <code>dotnet run -- help resources</code> at the command line of your application, you&#39;ll get this output:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Check,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">setup,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teardown</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stateful</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">system</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Ensure</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stateful</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --timeout </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">timeout</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --type </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-n, --name </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-e, --environment </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-v, --verbose</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-l, --log-level </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">loglevel</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">----config:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">prop</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Execute</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">an</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">action</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">against</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clear</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">teardown</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">setup</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">statistics</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">check</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">list</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --timeout </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">timeout</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --type </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-n, --name </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-e, --environment </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-v, --verbose</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-l, --log-level </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">loglevel</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">----config:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">prop</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                              </span><span style="color:#FFCB6B;">Usage</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">Description</span></span>
<span class="line"><span style="color:#FFCB6B;">──────────────────────────────────────────────────────────────────────────────────────────────────────────────</span></span>
<span class="line"><span style="color:#A6ACCD;">                             </span><span style="color:#FFCB6B;">action</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">Resource</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">action,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">setup</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --timeout </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">timeout</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">seconds,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --type </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Optionally</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resource</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-n, --name </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Optionally</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resource</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-e, --environment </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Use</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ASP.Net</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Environment</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-v, --verbose</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Write</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">out</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">much</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">more</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">information</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">startup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enables</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">console</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logging</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-l, --log-level </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">loglevel</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Override</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">level</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">----config:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">prop</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Overwrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">individual</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">configuration</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">items</span></span>
<span class="line"></span></code></pre></div><p>You&#39;ve got a couple of options. First, to just see what resources are registered in your system, use:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span>
<span class="line"></span></code></pre></div><p>To simply check on the state of each of the resources, use:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">check</span></span>
<span class="line"></span></code></pre></div><p>To set up all resources, use:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">setup</span></span>
<span class="line"></span></code></pre></div><p>Likewise, to teardown all resources:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teardown</span></span>
<span class="line"></span></code></pre></div><p>Or clear any existing state:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clear</span></span>
<span class="line"></span></code></pre></div><p>Or finally just to see any statistics:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dotnet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resources</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">statistics</span></span>
<span class="line"></span></code></pre></div>`,54),e=[t];function p(c,r,y,i,D,C){return n(),a("div",null,e)}const u=s(o,[["render",p]]);export{A as __pageData,u as default};
