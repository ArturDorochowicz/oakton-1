import{_ as s,c as a,o as n,a as o}from"./app.3751b049.js";const m=JSON.parse('{"title":"Command Assembly Discovery","description":"","frontmatter":{},"headers":[],"relativePath":"guide/discovery.md"}'),p={name:"guide/discovery.md"},l=o(`<h1 id="command-assembly-discovery" tabindex="-1">Command Assembly Discovery <a class="header-anchor" href="#command-assembly-discovery" aria-hidden="true">#</a></h1><p>This feature probably won&#39;t be commonly used, but there is a mechanism to automatically find and load Oakton commands from other assemblies through file scanning.</p><p>The first step is to mark any assembly containing Oakton commands you want discovered and loaded through this mechanism with this attribute:</p><p><a id="snippet-sample_using_oaktoncommandassemblyattribute"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">assembly</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Oakton</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">OaktonCommandAssembly</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/AspNetCoreExtensionCommands/BuildCommand.cs#L4-L6" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using_oaktoncommandassemblyattribute" title="Start of snippet">anchor</a></sup></p><p>Next, when you build a <code>CommandFactory</code>, you need to explicitly opt into the auto-discovery of commands by using the <code>RegisterCommandsFromExtensionAssemblies()</code> option as shown below in the Oakton.AspNetCore code:</p><p><a id="snippet-sample_using_extension_assemblies"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CommandExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">factory =&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    factory.RegisterCommands(typeof(RunCommand</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.GetTypeInfo</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.Assembly)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">applicationAssembly </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterCommands</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">applicationAssembly</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// This method will direct the CommandFactory to go look for extension</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// assemblies with Oakton commands</span></span>
<span class="line"><span style="color:#A6ACCD;">    factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterCommandsFromExtensionAssemblies</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    factory</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ConfigureRun </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">cmd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmd</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Input </span><span style="color:#F78C6C;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IHostBuilderInput</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ApplyExtensions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">source</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            i</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HostBuilder </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> source</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/oakton/blob/master/src/Oakton/CommandLineHostingExtensions.cs#L119-L143" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using_extension_assemblies" title="Start of snippet">anchor</a></sup></p>`,10),e=[l];function t(c,r,i,y,D,F){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{m as __pageData,A as default};
